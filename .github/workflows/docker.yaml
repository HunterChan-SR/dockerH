name: Docker

on: push

env: 
  IMAGE_NAME: "clash"
  IMAGE_TAG: "dreamacro/clash" # 确保IMAGE_TAG指向正确的镜像

jobs:
  build_and_upload:
    name: 构建并上传镜像
    runs-on: ubuntu-latest
    steps:
      - name: 检出代码库
        uses: actions/checkout@v2
      - name: 获取当前工作目录
        id: get_workspace
        run: echo "WORKSPACE=$(pwd)" >> $GITHUB_ENV
      - name: 执行拉取命令
        run: docker pull ${{ env.IMAGE_TAG }}
      - name: 把镜像保存为压缩包
        run: docker save -o ${{ env.WORKSPACE }}/${{ env.IMAGE_NAME }}.tar ${{ env.IMAGE_TAG }}
      - name: 显示文件夹
        run: ls -la
      - name: 上传${{ env.IMAGE_NAME }}.tar作为工件
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.IMAGE_NAME }}-image
          path: ${{ env.WORKSPACE }}/${{ env.IMAGE_NAME }}.tar
  download_and_use:
    name: 下载并使用镜像
    needs: build_and_upload
    runs-on: ubuntu-latest
    steps:
      - name: 检出代码库
        uses: actions/checkout@v2
      - name: 下载${{ env.IMAGE_NAME }}.tar工件
        uses: actions/download-artifact@v4
        with:
          name: ${{ env.IMAGE_NAME }}-image
      - name: 显示下载的文件
        run: ls -la
